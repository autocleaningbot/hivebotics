;; Auto-generated. Do not edit!


(when (boundp 'linear_actuator_as::ActuatorResult)
  (if (not (find-package "LINEAR_ACTUATOR_AS"))
    (make-package "LINEAR_ACTUATOR_AS"))
  (shadow 'ActuatorResult (find-package "LINEAR_ACTUATOR_AS")))
(unless (find-package "LINEAR_ACTUATOR_AS::ACTUATORRESULT")
  (make-package "LINEAR_ACTUATOR_AS::ACTUATORRESULT"))

(in-package "ROS")
;;//! \htmlinclude ActuatorResult.msg.html


(defclass linear_actuator_as::ActuatorResult
  :super ros::object
  :slots (_endPos _success ))

(defmethod linear_actuator_as::ActuatorResult
  (:init
   (&key
    ((:endPos __endPos) 0)
    ((:success __success) nil)
    )
   (send-super :init)
   (setq _endPos (round __endPos))
   (setq _success __success)
   self)
  (:endPos
   (&optional __endPos)
   (if __endPos (setq _endPos __endPos)) _endPos)
  (:success
   (&optional (__success :null))
   (if (not (eq __success :null)) (setq _success __success)) _success)
  (:serialization-length
   ()
   (+
    ;; int32 _endPos
    4
    ;; bool _success
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _endPos
       (write-long _endPos s)
     ;; bool _success
       (if _success (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _endPos
     (setq _endPos (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; bool _success
     (setq _success (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get linear_actuator_as::ActuatorResult :md5sum-) "b141879fc7b1ebfa588bc5600b152c95")
(setf (get linear_actuator_as::ActuatorResult :datatype-) "linear_actuator_as/ActuatorResult")
(setf (get linear_actuator_as::ActuatorResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 endPos
bool success

")



(provide :linear_actuator_as/ActuatorResult "b141879fc7b1ebfa588bc5600b152c95")


